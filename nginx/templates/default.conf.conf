# WORKING WITHOUT SSL
# server {
#     listen 80;
#     server_name localhost;

#     location / {
#         root /usr/share/nginx/html;
#         try_files $uri $uri/ /index.html;
#     }

#     location /api {
#         proxy_pass http://backend:12000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }

#     location /ws {
#         proxy_pass http://backend:12000/ws;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

#####################################################################################################
# Working with SSL simplified version
server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    ssl_certificate ${NGINX_SSL_CERT};
    ssl_certificate_key ${NGINX_SSL_KEY};
    server_name localhost;

    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    location /api {
        proxy_pass http://backend:12000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /ws {
        proxy_pass http://backend:12000/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

#####################################################################

# server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#     server_name ${NGINX_SERVER_NAME};
#     return 301 https://$host$request_uri;
# }
# server {
#     # SSL configuration
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     http2 on;
#     server_name ${NGINX_SERVER_NAME};
#     ssl_certificate ${NGINX_SSL_CERT};
#     ssl_certificate_key ${NGINX_SSL_KEY};
#     # ssl_certificate /etc/letsencrypt/live/quackamole.world/fullchain.pem;
#     # ssl_certificate_key /etc/letsencrypt/live/quackamole.world/privkey.pem;
#     # from https://cipherlist.eu/
#     # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
#     ssl_protocols TLSv1.3;# Requires nginx >= 1.13.0 else use TLSv1.2
#     ssl_prefer_server_ciphers on;
#     ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
#     ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
#     ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
#     ssl_session_timeout  10m;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_tickets off; # Requires nginx >= 1.5.9
#     ssl_stapling on; # Requires nginx >= 1.3.7
#     ssl_stapling_verify on; # Requires nginx => 1.3.7
#     # resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
#     # resolver_timeout 5s;
#     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
#     add_header X-Frame-Options DENY;
#     add_header X-Content-Type-Options nosniff;
#     add_header X-XSS-Protection "1; mode=block";
    
    # location /api {
    #   #  resolver 127.0.0.11;  # this docker embedded DNS server used by default, I think...
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-NginX-Proxy true;
    #     proxy_pass http://backend:12000;  # resolve during runtime rather than during startup
    #     proxy_ssl_session_reuse off;
    #     proxy_set_header Host $http_host;
    #     proxy_cache_bypass $http_upgrade;
    #     proxy_redirect off;
    # }

#     location / {
#         # root /var/www/html;
#         root /usr/share/nginx/html;
#         try_files $uri $uri/ /index.html;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_cache_bypass $http_upgrade;
#         add_header 'Access-Control-Allow-Origin' '*';
#         add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
#         add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
#         add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
#     }
# }
